@page "/listgame"
@using BL_Crud_SSR_Net8.Data
@using BL_Crud_SSR_Net8.Entities
@using Microsoft.EntityFrameworkCore
@inject AppDbContext Context
@inject NavigationManager NavMan
@attribute [StreamRendering]

<h3>List Game</h3>

@if (games.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Publisher</th>
                <th>Release Year</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var game in games)
            {
                <tr>
                    <td>@game.Title</td>
                    <td>@game.Publisher</td>
                    <td>@game.ReleaseYear</td>
                    <td><a href="editgame/@game.Id">Edit</a></td>
                    <td>
                        <form method="post"
                              @formname="@($"DeleteGameForm{game.Id}")"
                              @onsubmit="() => DeleteGame(game.Id)">
                            <button class="btn btn-link">
                                Delete
                            </button>
                            <AntiforgeryToken />
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<a href="editgame">Add Game</a>

@code {
    List<Game> games = new List<Game>();

    override protected async Task OnInitializedAsync()
    {
        games = await Context.Games.ToListAsync();
    }

    async Task DeleteGame(int id)
    {
        var result = await Context.Games.FindAsync(id);
        if(result is not null)
        {
            Context.Games.Remove(result);
            await Context.SaveChangesAsync();
            NavMan.NavigateTo("/listgame");
        }
    }
}
